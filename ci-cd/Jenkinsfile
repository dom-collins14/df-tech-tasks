pipeline {
    agent any
    
    environment {
        AWS_REGION = 'eu-west-2'
        ECS_CLUSTER = 'ecs-cluster-name'
        ECS_SERVICE = 'ecs-service-name'
        ECS_TASK_DEFINITION = 'task-def-name'
        ECS_CONTAINER_NAME = 'sample-app'
    }
    
    stages {
        stage('Checkout') {
            steps {
                git 'https://github.com/dodyg/practical-aspnetcore.git'
            }
        }      
        
        stage('Build') {
            steps {
                sh 'dotnet build projects/testing/nunit-1/src'
            }
        }
        
        stage('Test') {
            steps {
                sh 'dotnet test projects/testing/nunit-1/tests'
            }
        }
        
        stage('Publish') {
            steps {
                sh 'dotnet publish projects/testing/nunit-1 --output ./publish'
            }
        }
        
        stage('Build Docker Image') {
            steps {
                sh 'docker build -t sample-docker-repo/sample-app:latest .'
                sh 'docker tag sample-docker-repo/sample-app:latest sample-docker-repo/sample-app:${BUILD_NUMBER}'
            }
        }
        
        stage('Push Docker Image') {
            steps {
                sh 'aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin sample-docker-repo'
                sh 'docker push sample-docker-repo/sample-app:latest'
                sh 'docker push sample-docker-repo/sample-app:${BUILD_NUMBER}'
            }
        }
        
        stage('Deploy to ECS') {
            steps {
                sh '''aws ecs update-service \
                    --cluster $ECS_CLUSTER \
                    --service $ECS_SERVICE \
                    --force-new-deployment \
                    --region $AWS_REGION'''
            }
        }
    }
}
